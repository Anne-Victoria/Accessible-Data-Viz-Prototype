/* || Variables || */

:root {
  --bg-color: #ffffff;
  --bg-alternative-color: #eeeeee;
  --light-color: #cccccc;
  --text-color: #222222;
  --primary-color: #cfeebb;

  --hover-indicator-color: rgba(41, 184, 255, 0.5);
  --focus-indicator-color: #008fd6;

  /* todo: does this color have enough contrast? */
  --link-color: rgb(0, 95, 189);

  --border-width: 2px;

  --margin-small: 1rem;
  --secondary-font: monospace;

  --viz-min-width: 700px;
}

@media all and (min-width: 550px) {
  :root {
    --margin-small: 3rem;
  }
}

/* || General || */

html {
  box-sizing: border-box;
  margin: 0;
  height: 100%;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

body,
figure {
  margin: 0;
}

body {
  background-color: var(--bg-color);
  color: var(--text-color);
}

img {
  width: 100%;
  height: auto;
}

svg {
  display: block;
}

/* || Typography || */

body {
  font-family: system-ui, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell,
    'Helvetica Neue', sans-serif;
  line-height: 1.5;
}

h1 {
  font-size: 1.5rem;
  margin-top: 2em;
  margin-bottom: 2em;
}
h2 {
  font-size: 1.3104rem;
}
h3 {
  font-size: 1.1447rem;
}
small {
  font-size: 0.8736rem;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: bold;
  font-family: var(--secondary-font);
}

h2,
h3 {
  margin-top: 2rem;
}

body,
p,
ol,
ul {
  font-weight: normal;
}

/* || Buttons and links || */

a {
  color: var(--link-color);
}

.button {
  display: inline-block;
  color: var(--text-color);
  text-decoration: none;
  position: relative;
  border: 1px solid var(--text-color);
  border-right-width: 2px;
  border-bottom-width: 2px;
  padding: 1em 2em;
  background-color: var(--bg-color);
  font-size: 1rem;
  text-align: center;
}

.button:hover {
  cursor: pointer;
}

.button:hover {
  outline: 5px solid var(--hover-indicator-color);
}
.button:focus {
  outline: 5px solid var(--focus-indicator-color);
}

.button:active {
  left: 1px;
  top: 1px;
  border-right-width: 1px;
  border-bottom-width: 1px;
  /* Prevent subsequent elements from shifting up or left 1px */
  margin-bottom: 1px;
  margin-right: 1px;
}

.icon-button-content {
  display: flex;
  align-items: center;
  height: 1rem;
}

.button-icon {
  width: 1em;
  height: 1em;
  fill: var(--text-color);
  margin-right: 1em;
}

.skip-link {
  position: absolute;
  left: -10000px;
}

.skip-link:focus {
  position: initial;
  left: 0;
}

/* || Input Elements || */

legend {
  font-family: var(--secondary-font);
  font-size: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
  font-weight: bold;
}

.radio-button-wrapper {
  display: block;
  margin-top: 0.25em;
  margin-bottom: 0.25em;
}

/* || Utilities || */

.margin-small-x {
  margin-left: var(--margin-small);
  margin-right: var(--margin-small);
}

/* According to https://css-tricks.com/inclusively-hidden/ */
.screen-reader-only {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

/* || General layout || */

.main {
  margin-left: var(--margin-small);
  margin-right: var(--margin-small);
}

@media all and (min-width: 1000px) {
  .main {
    max-width: 900px;
    margin-left: auto;
    margin-right: auto;
  }
}

@media all and (min-width: 1300px) {
  .main {
    max-width: 1200px;
  }
}

/* || Start page || */

.introtext {
  margin-bottom: 3rem;
}

.card {
  margin-left: calc(-1 * var(--margin-small));
  margin-right: calc(-1 * var(--margin-small));
  margin-bottom: var(--margin-small);
  position: relative;
  transition: all 0.3s ease-out;
  border-top: var(--border-width) solid var(--text-color);
  border-bottom: var(--border-width) solid var(--text-color);
  background-color: var(--bg-color);
}

.card:hover,
.card:focus-within {
  transform: translate(0, -0.5rem);
}

.card:hover {
  outline: 10px solid var(--hover-indicator-color);
}

.card:focus-within {
  outline: 10px solid var(--focus-indicator-color);
}

.card a:focus {
  /* The card has the focus outline, so we can safely remove it from the link */
  outline: none;
}

.card * {
  color: var(--text-color);
  text-decoration: none;
}

.card h2,
.card p {
  margin: 1rem;
}

.card a {
  display: block;
  height: 100%;
}

@media all and (min-width: 550px) {
  .card {
    margin-left: 0;
    margin-right: 0;
  }
  .card {
    border: var(--border-width) solid var(--text-color);
  }

  .card p {
    margin: 1rem 2rem 2rem 2rem;
  }
  .card h2 {
    margin: 2rem 2rem 1rem 2rem;
  }
}

@media all and (min-width: 1000px) {
  .cards {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
  }

  .card {
    flex: 1 1 0px;
  }

  .card:not(:last-child) {
    margin-right: 1rem;
  }
}

/* || Visualization page || */

.back-button,
.enlarge-button {
  margin-top: 1rem;
}

.viz-container {
  margin-left: calc(-1 * var(--margin-small));
  margin-right: calc(-1 * var(--margin-small));
  border-top: var(--border-width) solid var(--light-color);
  border-bottom: var(--border-width) solid var(--light-color);
  background-color: var(--bg-alternative-color);
  overflow: auto;
}

.viz-container svg {
  width: 100%;
  min-width: var(--viz-min-width);
  background-color: var(--bg-alternative-color);
}

svg text {
  /* We need to hardcode the font size in pixels here. If we would set this to 1rem,
  the text would break out of the SVG elements when the user has set a larger font size. */
  font-size: 16px;
  color: var(--text-color);
}

.tick text {
  font-family: var(--secondary-font);
}

.axis-label {
  font-weight: bold;
  font-size: 1.2rem;
}

@media all and (min-width: 1000px) {
  .viz-container {
    width: 100vw;
    margin-left: calc(-1 * (100vw - 900px) / 2);
    margin-right: calc(-1 * (100vw - 900px) / 2);
  }

  .viz-container svg {
    max-width: 900px;
    margin-left: calc((100vw - 900px) / 2);
    margin-right: calc((100vw - 900px) / 2);
  }
}

@media all and (min-width: 1300px) {
  .viz-container {
    margin-left: calc(-1 * (100vw - 1200px) / 2);
    margin-right: calc(-1 * (100vw - 1200px) / 2);
  }

  .viz-container svg {
    max-width: 1200px;
    margin-left: calc((100vw - 1200px) / 2);
    margin-right: calc((100vw - 1200px) / 2);
  }
}

/* || Fullscreen viz page || */

.fullscreen {
  height: 100%;
  overflow: hidden;
  background-color: var(--bg-alternative-color);
}

.fullscreen-main {
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-flow: column nowrap;
}

.fullscreen-controls {
  display: flex;
  flex-flow: column nowrap;
  margin: 1rem;
}

.fullscreen-controls .button {
  margin-bottom: 0.5rem;
}

.fullscreen-controls .button:active {
  /* Prevent subsequent elements from shifting up 1px */
  margin-bottom: calc(0.5rem + 1px);
}

.fullscreen-controls .button:last-child {
  margin-top: 1rem;
}

.fullscreen-viz-container {
  overflow: scroll;
  flex-grow: 1;
}

.fullscreen-viz-container svg {
  width: 100%;
  /* Note: make sure to keep min and max width in sync with the values in zoom.ts */
  min-width: var(--viz-min-width);
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

@media all and (min-width: 650px) {
  .fullscreen-controls {
    flex-flow: row nowrap;
    align-items: center;
  }

  .fullscreen-controls .button:not(:last-child) {
    margin-right: 0.5rem;
  }

  .fullscreen-controls .button:not(:last-child):active {
    /* Prevent subsequent elements from shifting left 1px */
    margin-right: calc(0.5rem + 1px);
  }

  .fullscreen-controls .button:last-child {
    margin-top: 0;
    margin-left: auto;
  }
}

/* || Data table page || */

table {
  border-collapse: collapse;
  margin-bottom: 1rem;
}

caption {
  text-align: left;
  margin-bottom: 1rem;
}

td,
th {
  padding: 0.5rem;
  text-align: right;
  font-family: var(--secondary-font);
  font-size: 1rem;
}

td:first-child,
th:first-child {
  padding-left: 2rem;
}
td:last-child,
th:last-child {
  padding-right: 2rem;
}

tr:nth-child(2n) {
  background-color: var(--bg-alternative-color);
}
